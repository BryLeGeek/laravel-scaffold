<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Repositories\DummyRepository;
use Illuminate\Http\Request;
use Validator;

class DummiesController extends Controller
{
    public function __construct(DummyRepository $dummyRepository)
    {
        $this->dummyRepository = $dummyRepository;

        $this->middleware('auth:admin');
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $dummies = $this->dummyRepository->all();

        return view('admin.dummies.index', compact('dummies'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('admin.dummies.create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $validator = Validator::make($request->all(), [
            'name' => 'required|max:255',
        ]);

        if ($validator->fails()) {
            flash()->error("Le formulaire n'est pas rempli convenablement.");

            return redirect()->back()
                ->withErrors($validator)
                ->withInput();
        }

        $this->dummyRepository->create($request->all());
        flash()->success('Vos données ont bien été enregistrées.');

        return redirect()->route('admin.dummies.index');
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $dummy = $this->dummyRepository->find($id);
        if (!$dummy) {
            abort(404);
        }

        return view('admin.dummies.edit', compact('dummy'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        $validator = Validator::make($request->all(), [
            'name' => 'required|max:255',
        ]);

        if ($validator->fails()) {
            flash()->error("Le formulaire n'est pas rempli convenablement.");

            return redirect()->back()
                ->withErrors($validator)
                ->withInput();
        }

        $this->dummyRepository->update($id, $request->all());
        flash()->success('Vos données ont bien été enregistrées.');

        return redirect()->route('admin.dummies.index');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        $this->dummyRepository->delete($id);
        flash()->success('Vos données ont bien été supprimées.');

        return redirect()->route('admin.dummies.index');
    }
}
